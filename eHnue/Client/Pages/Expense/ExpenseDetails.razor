@page "/Expensedetails"
@using eHnue.Shared.Models
@inject HttpClient Http
<h2>Hình thức chi trả khi đi nước ngoài</h2>
@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <AuthorizeView Roles="Mod, Admin">
        <Authorized>
            <div class="row">
                <div class="col-md-6">
                    <a href='/expense/add' class="btn btn-primary" role="button">
                        <i class="fas fa-user-plus"></i>
                        Thêm Hình thức chi trả
                    </a>
                </div>
                <div class="input-group col">
                    <input type="text" class="form-control" placeholder="Search expense by name"
                           @bind="SearchString" @bind:event="oninput" @onkeyup="FilterExpense" />
                    @if (SearchString.Length > 0)
                    {
                        <div class="input-group-append">
                            <button class="btn btn-danger" @onclick="ResetSearch">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    }
                </div>
            </div>
            <br />
            @if (expenseList == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <table class="table table-striped align-middle table-bordered">
                    <thead class="table-success">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var expense in expenseList)
                        {
                            <tr>
                                <td>@expense.Id</td>
                                <td>@expense.ExpenseName</td>

                                <td>
                                    <a href='/expense/edit/@expense.Id' class="btn btn-outline-dark" role="button">
                                        Edit
                                    </a>
                                    <a href='/expense/delete/@expense.Id' class="btn btn-outline-danger" role="button">
                                        Delete
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            }
        </Authorized>
        <NotAuthorized>
            <p>Please sign in.</p>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>
@code {
    protected List<Expense> expenseList = new();
    protected List<Expense> searchExpenseData = new();
    protected Expense expense = new();
    protected string SearchString { get; set; } = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        await GetExpense();
    }
    protected async Task GetExpense()
    {
        expenseList = await Http.GetFromJsonAsync<List<Expense>>("api/Expense");
        searchExpenseData = expenseList;
    }
    protected void FilterExpense()
    {
        if (!string.IsNullOrEmpty(SearchString))
        {
            expenseList = searchExpenseData
                .Where(x => x.ExpenseName.IndexOf(SearchString, StringComparison.OrdinalIgnoreCase) != -1)
                .ToList();
        }
        else
        {
            expenseList = searchExpenseData;
        }
    }
    protected void DeleteConfirm(int expenseID)
    {
        expense = expenseList.FirstOrDefault(x => x.Id == expenseID);
    }
    public void ResetSearch()
    {
        SearchString = string.Empty;
        expenseList = searchExpenseData;
    }
}